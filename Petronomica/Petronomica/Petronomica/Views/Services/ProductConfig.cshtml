@model Petronomica.ViewModels.ProductExtViewModel
@{
    ViewData["Title"] = "Настройки услуги";
}
<a asp-action="Index">Витрина</a>
<div class="row">
    <div class="col-md-4 order-md-4">
        <div class="container">
            <div class="card img-fluid" style="width:400px">
                <img class="card-img-top" src=@Model.Image alt="Card image" style="width:100%;height:100%">
                <div class="card-body">
                    @*<a class="btn btn-primary" asp-action="OrderSettings" asp-controller="Services" asp-route-id="@Model.Id">Заказать</a>*@
                    <button class="btn btn-primary" onclick="ConcreteProductView()">Заказать</button>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6 order-md-6">
        <p id="descript" class="card-text"></p>
    </div>
</div>

<p id="result"></p>
<script>
    function Description(msg) {
        document.getElementById("descript").innerHTML = msg;
    }
    (function LoadDescription(path) {
        httpGetAsync("@Model.Descript", Description)
    }())
function Result(msg) {
    document.getElementById("result").innerHTML = msg;
}
function ConcreteProductView() {
    httpGetAsync("@Url.Action("GetServiceType", "Services")?id=" + @Model.Id, Result);
    }
    function httpGetAsync(theUrl, callback) {
        var xmlHttp = new XMLHttpRequest();
        xmlHttp.onreadystatechange = function () {
            if (xmlHttp.readyState == 4 && xmlHttp.status == 200)
                callback(xmlHttp.responseText);
        }
        xmlHttp.open("GET", theUrl, true);
        xmlHttp.send(null);
    }
</script>
